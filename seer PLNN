# read the raw data downloaded from seer stat;
nodes <- read.csv('E:\\SEER\\dyj\\dyj.csv')

library(tidyverse)
library(data.table)
library(table1)
library(survival)


nodes <- nodes %>% mutate(id = Patient.ID,
                        Prims = Primary.Site...labeled,
                        Race = Race.ethnicity,
                        Marstat = Marital.status.at.diagnosis,
                        Seq = Sequence.number,
                        sex = Sex,
                        Year = Year.of.diagnosis,
                        Age = Age.at.diagnosis,
                        Ins = Insurance.Recode..2007..,
                        histo2 = Histology.ICD.O.2 %/% 10,
                        histo3 = Histologic.Type.ICD.O.3  %/% 10,
                        behav2 = Behavior.code.ICD.O.2,
                        behav3 = Behavior.code.ICD.O.3,
                        behav_a = Behavior.recode.for.analysis,
                        grade = Grade,
                        t3 = T.value...based.on.AJCC.3rd..1988.2003.,
                        t6 = Derived.AJCC.T..6th.ed..2004.2015.,
                        t7 = Derived.AJCC.T..7th.ed..2010.2015.,
                        t_c = Derived.SEER.Combined.T..2016..,
                        n3 = N.value...based.on.AJCC.3rd..1988.2003.,
                        n6 = Derived.AJCC.N..6th.ed..2004.2015.,
                        n7 = Derived.AJCC.N..7th.ed..2010.2015.,
                        n_c = Derived.SEER.Combined.N..2016..,
                        m3 = M.value...based.on.AJCC.3rd..1988.2003.,
                        m6 = Derived.AJCC.M..6th.ed..2004.2015.,
                        m7 = Derived.AJCC.M..7th.ed..2010.2015.,
                        m_c = Derived.SEER.Combined.M.Src..2016..,
                        stage3 = AJCC.stage.3rd.edition..1988.2003.,
                        stage6 = Derived.AJCC.Stage.Group..6th.ed..2004.2015.,
                        stage7 = Derived.AJCC.Stage.Group..7th.ed..2010.2015.,
                        stage_c = Derived.SEER.Cmb.Stg.Grp..2016..,
                        size1 = EOD.10...size..1988.2003.,
                        size2 = CS.tumor.size..2004.2015.,
                        ex1 = EOD.10...extent..1988.2003.,
                        ex2 = CS.extension..2004.2015.,
                        met_cs = CS.mets.at.dx..2004.2015.,
                        met_ln = Mets.at.DX.Distant.LN..2016..,
                        met_other = Mets.at.DX.Other..2016..,
                        node1 = EOD.10...nodes..1988.2003.,
                        node2 = CS.lymph.nodes..2004.2015.,
                        regional_pos = Regional.nodes.positive..1988..,
                        regional_exam = Regional.nodes.examined..1988..,
                        surg_no_reason = Reason.no.cancer.directed.surgery,
                        surg_primsite = RX.Summ..Surg.Prim.Site..1998..,
                        Radio = Radiation.recode,
                        Radioseq = Radiation.sequence.with.surgery,
                        Chem = Chemotherapy.recode..yes..no.unk.,
                        outcome = Vital.status.recode..study.cutoff.used.,
                        deathcause = SEER.cause.specific.death.classification,
                        cod_site = COD.to.site.recode,
                        stime = Survival.months) 
nodes <- nodes[,122:ncol(nodes)]



####################################################   functioins to tranfer raw data to standars form  #####################################
trans_histo <- function(d){
  if (all(is.na(d))) return(NA)
  d <- na.omit(d)
  h <- cut(d,c(-Inf,804,808,813,838,Inf),c('Other','Squamous cell carcinoma','Other','Adenocarcinoma','Other'))
  if (length(h) == 1) return(h)
  return(h[2])
}
trans_grade <- function(d){
  if (is.na(d)) return(NA)
  if (d == 'Unknown') return(NA)
  if (str_detect(d,'IV')) return('IV')
  if (str_detect(d,'III')) return('III')
  if (str_detect(d,'II')) return('II')
  if (str_detect(d,'I')) return('I')
  return(NA)
}

trans_t <- function(d){
  d[which(d=='Blank(s)')] <- NA
  if (all(is.na(d))) return(NA)
  d <- na.omit(d)
  if (length(d)==2) d <- d[2]
  if (d %in% c('T0','Tis','TX')) return(NA)
  if (d %in% c('T4','T1','T2','T3')) return(d)
  return('T4')
}

trans_n <- function(d){
  d[which(d=='Blank(s)')] <- NA
  if (all(is.na(d))) return(NA)
  d <- na.omit(d)
  if (length(d)==2) d <- d[2]
  if (d == 'NX') return(NA)
  if (d %in% c('N0','N1','N1','N3','NX')) return(d)
  return('N2')
}


trans_m <- function(d){
  d[which(d=='Blank(s)')] <- NA
  if (all(is.na(d))) return(NA)
  d <- na.omit(d)
  if (length(d)==2) d <- d[2]
  if (str_detect(d,'X')) return(NA)
  return(d)
}

trans_stage <- function(d){
  d[which(d == 'Blank(s)')] <- NA
  d[which(d == 'UNK Stage')] <- NA
  if (all(is.na(d))) return(NA)
  d <- na.omit(d)
  if (length(d)==2) d <- d[2]
  if (str_detect(d,'IV')) return('IV')
  if (str_detect(d,'III')) return('III')
  # if (str_detect(d,'II')) return('II')
  if (str_detect(d,'I')) return('I/II')
  return(NA)
}

trans_ex <- function(d){
  d <- as.numeric(d)
  if (all(is.na(d))) return(NA)
  #1 EOD, 2CS
  d <- na.omit(d)
  if (d<100)  return(cut(d,c(-Inf,0,10,12,30,40,50,51,55,60,61,62,80,85,99),
                         c('Noninvasive','Local',NA,'Local','Regional',
                           'Regional','Local','Regional','Local',
                           'Regional','Regional','Local',
                           'Metastasis',NA)) %>% as.character())
  if (d %in% c(110,210,305,310,455,565,638,810,815,950,999)) return(NA)
  return(cut(d,
             c(-Inf,0,300,400,450,500,510,550,560,600,610,660,800,Inf),
             c('Noninvasive','Local','Regional','Local','Regional',
               'Local','Regional','Regional','Local',
               'Regional','Local','Local',NA)) %>% as.character())
}

trans_node <- function(d){
  d[which(d == 'Blank(s)')] <- NA
  if (all(is.na(d))) return(NA)
  x <- which(!is.na(d))
  d <- na.omit(d)
  d <- as.numeric(as.character(d))
  if (x==1){return(cut(d,c(-Inf,0,8,9),c('No','Yes',NA)))}
  return(cut(d,c(-Inf,0,998,999),c('No','Yes',NA)))
}

nodes <- nodes %>% mutate(seq = Seq,
                          histo = apply(data.frame(histo2,histo3),1,trans_histo),
                          behav = behav_a,
                          grade = apply(data.frame(grade),1,trans_grade),
                          t = apply(data.frame(t6,t7),1,trans_t),
                          n = apply(data.frame(n6,n7),1,trans_n),
                          m = apply(data.frame(m6,m7),1,trans_m),
                          stage = apply(data.frame(stage6,stage7),1,trans_stage),
                          extent = apply(data.frame(ex1,ex2),1,trans_ex),
                          met_cs = cut(as.numeric(as.character(met_cs)),
                                       c(-Inf,0,10,40,50,60,99),
                                       c('No metastasis','Distant lymph nodes','Distant metastasis','Both','Distant metastasis',NA)),
                          node = apply(data.frame(node1,node2),1,trans_node),
                          surg_primsite = cut(surg_primsite %>% as.character() %>% as.numeric(),
                                              c(-Inf,0,27,28,32,43,52,99),
                                              c('0','Local',NA,'Pharyngectomy','Pharyngectomy with mandi','Radical Pharyngectomy',NA)),
                          regional_pos = apply(data.frame(nodes$regional_pos),1,function(d){
                            d <- as.numeric(as.character(d))
                            if (is.na(d)) return(d)
                            if (d %in% c(0:89)) return(d)
                            return(NA)
                          }),
                          regional_exam = apply(data.frame(nodes$regional_exam),1,function(d){
                            d <- as.numeric(as.character(d))
                            if (is.na(d)) return(d)
                            if (d %in% c(0:89)) return(d)
                            return(NA)
                          }))

nodes <- nodes %>% dplyr::select(id,seq,Year,Prims,sex,Race,Marstat,Age,Ins,regional_exam,regional_pos,grade,#surg_no_reason,
                                surg_primsite,Radio,Radioseq,Chem,histo,t,n,m,stage,behav,size1,size2,extent,outcome,deathcause,cod_site,stime)

# exclude patients who do not meet the criterion

nodes <- nodes %>%  #16749
  filter(seq %in% c('1st of 2 or more primaries','One primary only')) %>% #12875
  filter(histo == 'Squamous cell carcinoma')%>% #12183
  filter(behav == 'Malignant') %>%    #12136
  filter(regional_pos < 22) #2233

trans_radioseq <- function(d){
  # [1] "Intraoperative rad with other rad before/after surgery"
  # [2] "Intraoperative radiation"                              
  # [3] "No radiation and/or cancer-directed surgery"           
  # [4] "Radiation after surgery"                               
  # [5] "Radiation before and after surgery"                    
  # [6] "Radiation prior to surgery"                            
  # [7] "Sequence unknown, but both were given"                 
  # [8] "Surgery both before and after radiation"
  if (is.na(d)) return(NA)
  if (d %in% c(1,2)) return(NA)
  if (d == 3) return('No radiation')
  if (d == 4) return('After')
  if (d == 6) return('Before')
  return('Both')
}
trans_size <- function(d,year){
  if (d == 'Blank(s)') return(NA)
  d <- d %>% as.character() %>% as.numeric()
  if (year == 1){
    if (d %in% c(0,999)) return(NA)
    return(d/10)
  }
  if (year == 2){
    if (d==0) return(NA)
    if (d<989) return(d/10)
    d <- d %% 10
    if (d==0)  return(1)
    if (d==9) return(NA)
    return(d)
  }
}


nodes <- nodes %>% 
  mutate(Radioseq = apply(data.frame(as.numeric(nodes$Radioseq)),1,trans_radioseq),
         Race = ifelse(Race %in% c('White','Black'),Race %>% as.character(),'Others'),
         Radio = ifelse(str_detect(nodes$Radio,'None|Refused|unknown'),'None/Unknown','Yes'),
         Marstat = apply(data.frame(Marstat),1,function(d){
           if (str_detect(d,'Married')) return('Married')
           if (str_detect(d,'Single')) return('Single')
           if (str_detect(d,'Unknown')) return(NA)
           return('Other')
         }),
         stime = stime %>% as.character() %>% as.numeric,
         dissection = ifelse(regional_exam>3,'Yes','No'),
         group =  ifelse(regional_exam == 0,'No positive','Positive'),
         s1 = apply(data.frame(size1), 1, trans_size,1),
         s2 = apply(data.frame(size2), 1, trans_size,2)) %>% 
  mutate(size = apply(data.frame(s1,s2),1,function(d){
           if (all(is.na(d))) return(NA)
           d <- na.omit(d)
           d <- (sum(d)/length(d)) %>% round(2)
           if (d<16) return(d)
           return(NA)
  }))
  
# this function is used to confirm wether the death was due to the specific cancer;
dcause <- function(d,o ='n'){
  if (d[1]==0) return(0)
  if (d[1]==1 & str_detect(d[2],'attributable')) return(1)
  return(ifelse(o =='c',2,0))
}


nodes$group <- ifelse(nodes$regional_pos == 0,'No positive','Positive')
nodes <- nodes %>% 
  mutate(onlyd = apply(nodes[,c('outcome','deathcause')],1,dcause,'n'),
         compd = apply(nodes[,c('outcome','deathcause')],1,dcause,'c'))


table1(~Prims+sex+Age+Race+Marstat+dissection+Radio+Radioseq+Chem+histo+behav+size+t+n+m+stage+grade+extent|group,data = nodes)

nodes$maincov <- cut(nodes$regional_pos,
                     c(-Inf,0,5,Inf),
                     c('0','1-5','>5'))
nodes$logcov <- ifelse(nodes$regional_pos>0,'Positive','Negative') %>% as.factor()
#nodes$stime <- nodes$stime %>% as.character() %>% as.numeric()
nodes$outcome <- ifelse(nodes$outcome=='Alive',0,1)

## maincov is the variable this study focus: the number of positive lym nodes;
nodes$maincov <- cut(nodes$regional_pos,
                     c(-Inf,0,5,Inf),
                     c('0','1-5','>5'))
nodes$outcome <- ifelse(nodes$outcome=='Alive',0,1)




################################################ analysis part ########################################################
nodes$size <- ifelse(nodes$size<2.1,'≤2','>2')
nodes$size <- nodes$size %>% as.factor() %>%  relevel(ref = '≤2')

### this function is used to get the single factor analysis of survival;
# xdata is the dataset we study; 
# unicov is a vector contains variable names we want to explore which should be contained in the dataset(xdata);
# target is a character to indicate which variable will be used to calculate the outcome (os/css), should be one of the colnames of dataset;
# this function now is only used for category;
# the outcome of analysis can be showed in the utable(list)
unitable <- function(xdata,target){
  utable[[target[2]]] <<- NULL
  xdata <- xdata %>% dplyr::select(all_of(unicov),all_of(target))
  xdata <- xdata %>% 
    mutate(ss = Surv(stime,xdata[,target[2]])) %>% 
    dplyr::select(-all_of(target))
  for (i in 1:length(unicov)){
    mdata <- xdata[,c('ss',unicov[i])]    
    if (unicov[i] == 'Age') mdata[,2] <- apply(mdata[,2] %>% as.matrix(),1,function(d){return(ifelse(d<66,'≤65','>65'))}) %>% as.factor()%>% relevel(ref = '≤65')
    model1 <<- summary(coxph(ss~.,data = mdata))
    utable[[target[2]]] <<- rbind(utable[[target[2]]],
                                  c(paste0(unicov[i],'(n=',model1$n,',nevent=',model1$nevent,')'),'',''),
                                  cbind(paste0('  ',names(table(mdata[,2]))),
                                        HR = c(1,paste0(round(model1$conf.int[,'exp(coef)'],2),
                                                        '(',round(model1$conf.int[,'lower .95'],2),
                                                        ',',round(model1$conf.int[,'upper .95'],2),')')),
                                        pvalue = c('',round(model1$coefficients[,'Pr(>|z|)'],3) %>% ifelse(.==0,'<0.001',.))
                                  ))
  }
}
unicov <- c('Prims','sex','Race','Marstat','Age','grade','surg_primsite','Radio','extent',
            'Radioseq','Chem','extent','dissection','size')
utable <- list()
unitable(nodes,c('stime','outcome'))
